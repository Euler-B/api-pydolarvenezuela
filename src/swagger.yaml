swagger: 4.0
openapi: 3.0.0
info:
  title: PyDolarVenezuela API
  description: Esta es la documentación de la API de pyDolarVenezuela donde sabrás cómo utilizar cada endpoint.
  version: 1.9.4
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://pydolarve.org/
tags:
  - name: GET

paths:
  /api/v1/{currency}:
    get:
      tags:
        - GET
      summary: Obtiene información de un monitor específico o de todos los monitores en una página.
      parameters:
        - name: currency
          in: path
          required: true
          description: La moneda en la que se expresarán los precios (dollar, euro).
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: La página de la que se quiere obtener la información.
          schema:
            type: string
            default: criptodolar
        - name: monitor
          in: query
          required: false
          description: El monitor específico del que se quiere obtener la información.
          schema:
            type: string
            default: null
      responses:
        200:
          description: La información de los monitores de la página.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllMonitors'
        400:
          description: Error.
        404:
          description: No se pudo encontrar la página que estaba buscando.
  /api/v1/{currency}/conversion:
    get:
      tags:
        - GET
      summary: Convierte un valor en bolívares a su equivalente a estas monedas extranjeras y viceversa.
      parameters:
        - name: currency
          in: path
          required: true
          description: La moneda en la que se expresarán los precios (dollar, euro).
          schema:
            type: string
        - name: type
          in: query
          required: true
          description: El tipo de conversión. Puede ser (VES, USD, EUR).
          schema:
            type: string
        - name: value
          in: query
          required: true
          description: El valor a convertir.
          schema:
            type: number
        - name: monitor
          in: query
          required: true
          description: El monitor específico del que se quiere obtener la información.
          schema:
            type: string
      responses:
        200:
          description: La información de los monitores de la página.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversion'
        400:
          description: Error.
  /api/v1/{currency}/history:
    get:
      tags:
        - GET
      summary: Obtiene el historial de precios de un monitor específico en una página.
      parameters:
        - name: currency
          in: path
          required: true
          description: La moneda en la que se expresarán los precios (dollar, euro).
          schema:
            type: string
        - name: page
          in: query
          required: true
          description: La página de la que se quiere obtener la información.
          schema:
            type: string
        - name: monitor
          in: query
          required: true
          description: El monitor específico del que se quiere obtener la información.
          schema:
            type: string
        - name: start_date
          in: query
          required: true
          description: Fecha de inicio del historial.
          schema:
            type: string
        - name: end_date
          in: query
          required: true
          description: Fecha de fin del historial.
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        200:
          description: La información de los monitores de la página.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/History'
        400:
          description: Error.
        404:
          description: No se pudo encontrar la página que estaba buscando.
  /api/v1/{currency}/changes:
    get:
      tags:
        - GET
      summary: Obtiene actualizaciones de precios realizadas en un día especifico de un monitor en una página.
      parameters:
        - name: currency
          in: path
          required: true
          description: La moneda en la que se expresarán los precios (dollar, euro).
          schema:
            type: string
        - name: page
          in: query
          required: true
          description: La página de la que se quiere obtener la información.
          schema:
            type: string
        - name: monitor
          in: query
          required: true
          description: El monitor específico del que se quiere obtener la información.
          schema:
            type: string
        - name: date
          in: query
          required: true
          description: Fecha de inicio del historial.
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        200:
          description: La información de los monitores de la página.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Changes'
        400:
          description: Error.
        404:
          description: No se pudo encontrar la página que estaba buscando.

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    AllMonitors:
      type: object
      properties:
        datetime:
          type: object
          properties:
            date:
              type: string
              format: date
            time:
              type: string
              format: time
        monitors:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Monitor'

    Monitor:
      type: object
      properties:
        change:
          type: number
          format: float
        color:
          type: string
        image:
          type: string
          format: uri
        last_update:
          type: string
          format: date-time
        percent:
          type: number
          format: float
        price:
          type: number
          format: float
        price_old:
          type: number
          format: float
        symbol:
          type: string
        title:
          type: string

    Conversion:
      type: number
      format: float

    MonitorData:
      type: object
      properties:
        price:
          type: number
          format: float
        last_update:
          type: string
          format: date-time

    History:
      type: object
      properties:
        datetime:
          type: string
          format: date-time
        history:
          type: array
          items:
            $ref: '#/components/schemas/MonitorData'
    
    Changes:
      type: object
      properties:
        datetime:
          type: string
          format: date-time
        changes:
          type: array
          items:
            $ref: '#/components/schemas/MonitorData'