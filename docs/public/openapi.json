{
  "swagger": 4,
  "openapi": "3.0.0",
  "info": {
    "title": "PyDolarVenezuela API",
    "description": "Esta es la documentación de la API de pyDolarVenezuela donde sabrás cómo utilizar cada endpoint.",
    "version": "2.0.3",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "https://pydolarve.org/"
    }
  ],
  "tags": [
    {
      "name": "Dólar"
    },
    {
      "name": "Webhook"
    }
  ],
  "paths": {
    "/api/v1/{currency}": {
      "get": {
        "tags": [
          "Dólar"
        ],
        "summary": "Obtener monitores",
        "description": "Obtiene información de un monitor específico o de todos los monitores en una página.",
        "parameters": [
          {
            "name": "currency",
            "in": "path",
            "required": true,
            "description": "La moneda en la que se expresarán los precios (dollar, euro).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "La página de la que se quiere obtener la información.",
            "schema": {
              "type": "string",
              "default": "criptodolar"
            }
          },
          {
            "name": "monitor",
            "in": "query",
            "required": false,
            "description": "El monitor específico del que se quiere obtener la información.",
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "format_date",
            "in": "query",
            "required": false,
            "description": "Convertir un formato de fecha específico. (`iso`, `timestamp`, `default`).",
            "schema": {
              "type": "string",
              "default": "default"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "La información de los monitores de la página.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllMonitors"
                }
              }
            }
          },
          "400": {
            "description": "Error."
          },
          "404": {
            "description": "No se pudo encontrar la página que estaba buscando."
          },
          "500": {
            "description": "Error en el servidor."
          }
        }
      }
    },
    "/api/v1/{currency}/conversion": {
      "get": {
        "tags": [
          "Dólar"
        ],
        "summary": "Convertir valor",
        "description": "Convierte un valor en bolívares a su equivalente a estas monedas extranjeras y viceversa.",
        "parameters": [
          {
            "name": "currency",
            "in": "path",
            "required": true,
            "description": "La moneda en la que se expresarán los precios (dollar, euro).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "description": "El tipo de conversión. Puede ser (VES, USD, EUR).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "description": "El valor a convertir.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "description": "La página de la que se quiere obtener la información.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "monitor",
            "in": "query",
            "required": true,
            "description": "El monitor específico del que se quiere obtener la información.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "La información de los monitores de la página.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conversion"
                }
              }
            }
          },
          "400": {
            "description": "Error."
          },
          "500": {
            "description": "Error en el servidor."
          }
        }
      }
    },
    "/api/v1/{currency}/history": {
      "get": {
        "tags": [
          "Dólar"
        ],
        "summary": "Obtener historial",
        "description": "Obtiene el historial de precios de un monitor específico en una página.",
        "parameters": [
          {
            "name": "currency",
            "in": "path",
            "required": true,
            "description": "La moneda en la que se expresarán los precios (dollar, euro).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "description": "La página de la que se quiere obtener la información.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "monitor",
            "in": "query",
            "required": true,
            "description": "El monitor específico del que se quiere obtener la información.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format_date",
            "in": "query",
            "required": false,
            "description": "Convertir un formato de fecha específico. (`iso`, `timestamp`, `default`).",
            "schema": {
              "type": "string",
              "default": "default"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "description": "Fecha de inicio del historial.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "description": "Fecha de fin del historial.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "La información de los monitores de la página.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/History"
                }
              }
            }
          },
          "400": {
            "description": "Error."
          },
          "500": {
            "description": "Error en el servidor."
          }
        }
      }
    },
    "/api/v1/{currency}/changes": {
      "get": {
        "tags": [
          "Dólar"
        ],
        "summary": "Obtener cambios",
        "description": "Obtiene actualizaciones de precios realizadas en un día especifico de un monitor en una página.",
        "parameters": [
          {
            "name": "currency",
            "in": "path",
            "required": true,
            "description": "La moneda en la que se expresarán los precios (dollar, euro).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "description": "La página de la que se quiere obtener la información.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "monitor",
            "in": "query",
            "required": true,
            "description": "El monitor específico del que se quiere obtener la información.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format_date",
            "in": "query",
            "required": false,
            "description": "Convertir un formato de fecha específico. (`iso`, `timestamp`, `default`).",
            "schema": {
              "type": "string",
              "default": "default"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "description": "Fecha de inicio del historial.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "La información de los monitores de la página.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Changes"
                }
              }
            }
          },
          "400": {
            "description": "Error."
          },
          "500": {
            "description": "Error en el servidor."
          }
        }
      }
    },
    "/api/user/set-webhook": {
      "post": {
        "tags": [
          "Webhook"
        ],
        "summary": "Establecer webhook",
        "description": "Establece un webhook para recibir notificaciones de actualizaciones de precios.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "La URL del webhook."
                  },
                  "certificate_ssl": {
                    "type": "boolean",
                    "description": "Si el webhook requiere un certificado SSL."
                  },
                  "token_secret": {
                    "type": "string",
                    "description": "El token secreto del webhook."
                  },
                  "monitors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "string",
                          "description": "La página de la que se quiere obtener la información."
                        },
                        "monitor": {
                          "type": "string",
                          "description": "El monitor específico del que se quiere obtener la información."
                        }
                      }
                    },
                    "description": "Los monitores de los que se quiere recibir notificaciones."
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Webhook establecido correctamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookOK"
                }
              }
            }
          },
          "400": {
            "description": "Error."
          },
          "500": {
            "description": "Error en el servidor."
          }
        }
      }
    },
    "/api/user/del-webhook": {
      "delete": {
        "tags": [
          "Webhook"
        ],
        "summary": "Eliminar webhook",
        "description": "Elimina un webhook para dejar de recibir notificaciones de actualizaciones de precios.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook eliminado correctamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookDelete"
                }
              }
            }
          },
          "400": {
            "description": "Error."
          },
          "500": {
            "description": "Error en el servidor."
          }
        }
      }
    },
    "/api/user/get-webhook": {
      "get": {
        "tags": [
          "Webhook"
        ],
        "summary": "Obtener los webhooks establecidos.",
        "description": "Obtiene todos los webhooks establecidos.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Webhooks obtenidos correctamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookGet"
                }
              }
            }
          },
          "400": {
            "description": "Error."
          },
          "500": {
            "description": "Error en el servidor."
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "AllMonitors": {
        "type": "object",
        "properties": {
          "datetime": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date"
              },
              "time": {
                "type": "string",
                "format": "time"
              }
            }
          },
          "monitors": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Monitor"
            }
          }
        }
      },
      "Monitor": {
        "type": "object",
        "properties": {
          "change": {
            "type": "number",
            "format": "float"
          },
          "color": {
            "type": "string"
          },
          "image": {
            "type": "string",
            "format": "uri"
          },
          "last_update": {
            "type": "string",
            "format": "date-time"
          },
          "percent": {
            "type": "number",
            "format": "float"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "price_old": {
            "type": "number",
            "format": "float"
          },
          "symbol": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "Conversion": {
        "type": "number",
        "format": "float"
      },
      "MonitorDataChanges": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "format": "float"
          },
          "last_update": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MonitorDataHistory": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "format": "float"
          },
          "price_high": {
            "type": "number",
            "format": "float"
          },
          "price_low": {
            "type": "number",
            "format": "float"
          },
          "last_update": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "History": {
        "type": "object",
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time"
          },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonitorDataHistory"
            }
          }
        }
      },
      "Changes": {
        "type": "object",
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time"
          },
          "changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonitorDataChanges"
            }
          }
        }
      },
      "WebhookOK": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Webhook creado con éxito."
          }
        }
      },
      "WebhookDelete": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Webhook eliminado con éxito."
          }
        }
      },
      "WebhookGet": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "format": "uri"
            },
            "certificate_ssl": {
              "type": "boolean",
              "format": "boolean"
            },
            "token": {
              "type": "string",
              "format": "password"
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "monitors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "monitor_id": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}